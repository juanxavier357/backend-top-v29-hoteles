// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                   String         @id @default(cuid())
  email                String         @unique
  firstName            String
  lastName             String
  password             String
  isActive             Boolean        @default(false)
  avatar               String?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  roles                userRoles[]
  payment              payments[]
  reservations         reservations[]
}

model roles {
  id        String      @id @default(cuid())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  users     userRoles[]
}

model userRoles {
  id     String @id @default(cuid())
  user   users  @relation(fields: [userId], references: [id])
  userId String
  role   roles  @relation(fields: [roleId], references: [id])
  roleId String
}

model hotels {
  id          String         @id @default(cuid())
  hotel       String
  about       String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  location    locations[]
  image       images[]
  room        rooms[]
  facility    facilities[]
  contactInfo contactsInfo[]
  reservation reservations[]
}

model locations {
  id        String   @id @default(cuid())
  city      String
  latLng    String?
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hotel     hotels[]
}

model images {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hotel     hotels   @relation(fields: [hotelId], references: [id])
  hotelId   String
}

model rooms {
  id            String      @id @default(cuid())
  title         String
  description   String
  pricePerNight Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  hotel         hotels      @relation(fields: [hotelId], references: [id])
  hotelId       String
  amenity       amenities[]
}

model facilities {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hotel     hotels   @relation(fields: [hotelId], references: [id])
  hotelId   String
}

model amenities {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  room      rooms    @relation(fields: [roomId], references: [id])
  roomId    String
}

model contactsInfo {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hotel     hotels   @relation(fields: [hotelId], references: [id])
  hotelId   String
}

model reservations {
  id            String   @id @default(cuid())
  startDate     DateTime
  endDate       DateTime
  paymentStatus Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          users    @relation(fields: [userId], references: [id])
  hotel         hotels   @relation(fields: [hotelId], references: [id])
  userId        String
  hotelId       String
}

model payments {
  id          String   @id @default(cuid())
  description String?
  currency    String
  amount      Int
  refId       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        users    @relation(fields: [userId], references: [id])
  userId      String
}